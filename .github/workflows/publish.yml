name: Publish

on:
  push:
    branches:
      - alpha
      - beta
      - main
      - windows

  workflow_dispatch:
    branches:
      - alpha
      - beta
      - main
      - windows

jobs:
  publish:
    runs-on: windows-latest

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic # Need an `id` for output variables
        with:
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              {
                name: 'windows',
                prerelease: true
              }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify that Semantic Release updated src/package.json
        run: |
          cat src/package.json

      - name: Echo the version number
        uses: johnlindquist/kit-action@main
        with:
          script: echo ${{ steps.semantic.outputs.new_release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install tar with npm
        run: |
          cd scripts
          npm install -D tar
          cd ..

      - name: Create Assets
        uses: johnlindquist/kit-action@main
        with:
          script: create-assets ${{ steps.semantic.outputs.new_release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.1
      - name: yarn && yarn add @johnlindquist/kit
        run: |
          yarn
          if [ "${{ env.release_channel }}" = "main" ]; then yarn add "@johnlindquist/kit"; \
          else yarn add "@johnlindquist/kit@${{ env.release_channel }}"; fi

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn build
          cd ./src
          yarn remove node-mac-permissions
          cat ./package.json
          cd ..
          echo "--- Done removing mac deps ---\n\n"
          yarn electron-builder --publish always -w
