name: Publish

on:
  push:
    branches:
      - alpha
      - beta
      - main

  workflow_dispatch:
    branches:
      - alpha
      - beta
      - main

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Show ref
        run: |
          echo "${{ env.GITHUB_BASE_REF_SLUG || env.GITHUB_REF_SLUG }}"
          echo "release_channel=${{ env.GITHUB_BASE_REF_SLUG || env.GITHUB_REF_SLUG }}" >> $GITHUB_ENV

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic # Need an `id` for output variables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo the version number
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}

      - name: Publish Kit
        uses: johnlindquist/kit-action@main
        with:
          script: 'publish-kit'
          args: ${{ steps.semantic.outputs.new_release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Assets
        uses: johnlindquist/kit-action@main
        with:
          script: 'create-assets'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Install Node, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2

      - name: yarn && yarn add @johnlindquist/kit
        run: |
          yarn
          if [ "${{ env.release_channel }}" = "main" ]; then yarn add "@johnlindquist/kit"; \
          else yarn add "@johnlindquist/kit@${{ env.release_channel }}"; fi

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn build
          yarn electron-builder --publish always -m
          echo "\n\n--- Removing mac deps ---"
          cd ./src
          yarn remove node-mac-permissions @akiflow/electron-panel-window
          cat ./package.json
          cd ..
          echo "--- Done removing mac deps ---\n\n"
          yarn electron-builder --publish always -wl
